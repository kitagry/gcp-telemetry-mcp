// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kitagry/gcp-telemetry-mcp/profiler (interfaces: ProfilerClient,ProfilerClientInterface)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_client.go -package=mocks github.com/kitagry/gcp-telemetry-mcp/profiler ProfilerClient,ProfilerClientInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	profiler "github.com/kitagry/gcp-telemetry-mcp/profiler"
	gomock "go.uber.org/mock/gomock"
)

// MockProfilerClient is a mock of ProfilerClient interface.
type MockProfilerClient struct {
	ctrl     *gomock.Controller
	recorder *MockProfilerClientMockRecorder
	isgomock struct{}
}

// MockProfilerClientMockRecorder is the mock recorder for MockProfilerClient.
type MockProfilerClientMockRecorder struct {
	mock *MockProfilerClient
}

// NewMockProfilerClient creates a new mock instance.
func NewMockProfilerClient(ctrl *gomock.Controller) *MockProfilerClient {
	mock := &MockProfilerClient{ctrl: ctrl}
	mock.recorder = &MockProfilerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfilerClient) EXPECT() *MockProfilerClientMockRecorder {
	return m.recorder
}

// CreateOfflineProfile mocks base method.
func (m *MockProfilerClient) CreateOfflineProfile(ctx context.Context, req profiler.CreateOfflineProfileRequest) (*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOfflineProfile", ctx, req)
	ret0, _ := ret[0].(*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOfflineProfile indicates an expected call of CreateOfflineProfile.
func (mr *MockProfilerClientMockRecorder) CreateOfflineProfile(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOfflineProfile", reflect.TypeOf((*MockProfilerClient)(nil).CreateOfflineProfile), ctx, req)
}

// CreateProfile mocks base method.
func (m *MockProfilerClient) CreateProfile(ctx context.Context, req profiler.CreateProfileRequest) (*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfile", ctx, req)
	ret0, _ := ret[0].(*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfile indicates an expected call of CreateProfile.
func (mr *MockProfilerClientMockRecorder) CreateProfile(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfile", reflect.TypeOf((*MockProfilerClient)(nil).CreateProfile), ctx, req)
}

// ListProfiles mocks base method.
func (m *MockProfilerClient) ListProfiles(ctx context.Context, req profiler.ListProfilesRequest) ([]*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfiles", ctx, req)
	ret0, _ := ret[0].([]*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfiles indicates an expected call of ListProfiles.
func (mr *MockProfilerClientMockRecorder) ListProfiles(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfiles", reflect.TypeOf((*MockProfilerClient)(nil).ListProfiles), ctx, req)
}

// UpdateProfile mocks base method.
func (m *MockProfilerClient) UpdateProfile(ctx context.Context, req profiler.UpdateProfileRequest) (*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", ctx, req)
	ret0, _ := ret[0].(*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockProfilerClientMockRecorder) UpdateProfile(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockProfilerClient)(nil).UpdateProfile), ctx, req)
}

// MockProfilerClientInterface is a mock of ProfilerClientInterface interface.
type MockProfilerClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockProfilerClientInterfaceMockRecorder
	isgomock struct{}
}

// MockProfilerClientInterfaceMockRecorder is the mock recorder for MockProfilerClientInterface.
type MockProfilerClientInterfaceMockRecorder struct {
	mock *MockProfilerClientInterface
}

// NewMockProfilerClientInterface creates a new mock instance.
func NewMockProfilerClientInterface(ctrl *gomock.Controller) *MockProfilerClientInterface {
	mock := &MockProfilerClientInterface{ctrl: ctrl}
	mock.recorder = &MockProfilerClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfilerClientInterface) EXPECT() *MockProfilerClientInterfaceMockRecorder {
	return m.recorder
}

// CreateOfflineProfile mocks base method.
func (m *MockProfilerClientInterface) CreateOfflineProfile(ctx context.Context, req profiler.CreateOfflineProfileRequest) (*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOfflineProfile", ctx, req)
	ret0, _ := ret[0].(*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOfflineProfile indicates an expected call of CreateOfflineProfile.
func (mr *MockProfilerClientInterfaceMockRecorder) CreateOfflineProfile(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOfflineProfile", reflect.TypeOf((*MockProfilerClientInterface)(nil).CreateOfflineProfile), ctx, req)
}

// CreateProfile mocks base method.
func (m *MockProfilerClientInterface) CreateProfile(ctx context.Context, req profiler.CreateProfileRequest) (*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfile", ctx, req)
	ret0, _ := ret[0].(*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfile indicates an expected call of CreateProfile.
func (mr *MockProfilerClientInterfaceMockRecorder) CreateProfile(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfile", reflect.TypeOf((*MockProfilerClientInterface)(nil).CreateProfile), ctx, req)
}

// ListProfiles mocks base method.
func (m *MockProfilerClientInterface) ListProfiles(ctx context.Context, req profiler.ListProfilesRequest) ([]*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfiles", ctx, req)
	ret0, _ := ret[0].([]*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfiles indicates an expected call of ListProfiles.
func (mr *MockProfilerClientInterfaceMockRecorder) ListProfiles(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfiles", reflect.TypeOf((*MockProfilerClientInterface)(nil).ListProfiles), ctx, req)
}

// UpdateProfile mocks base method.
func (m *MockProfilerClientInterface) UpdateProfile(ctx context.Context, req profiler.UpdateProfileRequest) (*profiler.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", ctx, req)
	ret0, _ := ret[0].(*profiler.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockProfilerClientInterfaceMockRecorder) UpdateProfile(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockProfilerClientInterface)(nil).UpdateProfile), ctx, req)
}
